// electron-builder.json5
// → doc : https://www.electron.build/configuration/configuration
{
  /* ------------------------------------------------------------------ */
  /*  GÉNÉRAL                                                          */
  /* ------------------------------------------------------------------ */

  // identifiant unique de l’application (reverse-DNS)
  appId: "com.dumas.lolskinpicker",

  // nom “marketing” affiché dans l’installeur, le menu, etc.
  productName: "LoL Skin Picker",

  "publish": [
    {
      // ─────────────┐
      "provider": "github",    // <- indispensable
      // ─────────────┘
      "owner": "Nano315",  // ton compte / orga
      "repo": "lol-skin-picker", // le repo où publier les releases
      "releaseType": "release"
    }
  ],

  // on empaquète tout dans un seul fichier .asar
  asar: true,

  /* ------------------------------------------------------------------ */
  /*  SORTIE / FICHIERS À INCLURE                                       */
  /* ------------------------------------------------------------------ */

  // dossier où electron-builder placera les installeurs finaux
  directories: {
    output: "dist",
  },

  // ce qui doit être inclus dans l’appli avant empaquetage
  files: [
    "dist/**", // bundle Vite (renderer)
    "dist-electron/**", // bundle Electron (main + preload)
    "node_modules/**", // dépendances runtime
    "package.json", // meta + version
  ],

  /* ------------------------------------------------------------------ */
  /*  WINDOWS                                                          */
  /* ------------------------------------------------------------------ */

  win: {
    // icône (256×256 px min.) – laisse .ico multi-résolution
    icon: "public/icon.ico",

    // type d’installeur : NSIS (EXE)
    target: [
      {
        target: "nsis",
        arch: ["x64"], // supprime ou ajoute "arm64" si besoin
      },
    ],

    // nom final du fichier
    artifactName: "${productName}-Setup-${version}.${ext}",
  },

  /* Personnalisation NSIS */
  nsis: {
    oneClick: true, // installateur silencieux (un seul clic)
    perMachine: false, // install pour l’utilisateur courant
    deleteAppDataOnUninstall: false, // on conserve le cache lors d’une désinstallation
  },

  /* ------------------------------------------------------------------ */
  /*  macOS  (facultatif : commente si tu ne distribues pas sur mac)    */
  /* ------------------------------------------------------------------ */

  /*
  "mac": {
    "target": [ "dmg" ],
    "icon": "public/icon.icns",
    "artifactName": "${productName}-${version}.${ext}"
  },
  */

  /* ------------------------------------------------------------------ */
  /*  Linux  (facultatif)                                               */
  /* ------------------------------------------------------------------ */

  /*
  "linux": {
    "target": [ "AppImage" ],
    "icon": "public",
    "artifactName": "${productName}-${version}.${ext}"
  },
  */

  /* ------------------------------------------------------------------ */
  /*  METADONNÉES SUPPLÉMENTAIRES (pour le package.json embarqué)       */
  /* ------------------------------------------------------------------ */

  extraMetadata: {
    version: "1.2.3",
    description: "Applique automatiquement un skin/chroma aléatoire durant la phase de sélection de champion de League of Legends.",
  },
  extraResources: [
    { from: "public/icon.ico", to: "assets/icon.ico" },
    { from: "public/fallback-icon.png", to: "assets/fallback-icon.png" },
    { from: "public/fallback-skin.png", to: "assets/fallback-skin.png" },
  ],
}
